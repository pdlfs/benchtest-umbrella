#!/usr/bin/env perl
#
# cmu_hostlist.pl  generate a list of hosts in an cmu emulab experiment
# 22-Jul-2020  chuck@ece.cmu.edu
#

#
# this assumes you are running on an emulab node in an experiment
# that was generated by the makebed script with hostnames like
# "h0", "h1", ...   and that non-control network interfaces have
# hostnames with a suffix like "-dib" (for IB).
#

use strict;
use Getopt::Long qw(:config require_order no_ignore_case);
require "/etc/emulab/paths.pm";
$ENV{'BOOTDIR'} = $emulabpaths::BOOTDIR;

my($rv, $suffix);

$rv = GetOptions(
                 's|suffix=s'  =>  \$suffix,
                );

sub usage {
    my($err) = @_;
    print "\n";
    print "$err\n\n" if (defined($err));
    print "usage: $0 [options]\n";
    print "where options are:\n";
    print "\t-s / --suffix [s]    test network hostname suffix (e.g. 'dib')\n";
    print "\n";
    print "note: default suffix is empty (meaning use control network)\n\n";
    exit(1);
}

die usage() if ($rv != 1 || $#ARGV >= 0);

my($fh, @phosts, $nodecnt, $node);

#
# read ltpmap to get list of hosts in this experiment.  sanity check names.
#
open($fh, $ENV{'BOOTDIR'} . "/ltpmap") || die "cannot open emulab ltpmap";
while (<$fh>) {
    chop;
    next unless (/^H /);
    my($H, $vhost, $phost) = split(/ /);
    next unless ($vhost =~ /^h(\d+)$/);
    $phosts[$1] = $phost;
    $nodecnt++;
}
close($fh);
die "host count mismatch" unless ($nodecnt == $#phosts + 1);

#
# now print results as a CSV:
#   1. virtual hostname
#   2. physical node name
#   3. virtual hostname on test network
#   4. physical hostname on test network
#
for ($node = 0 ; $node < $nodecnt ; $node++) {
    printf "h%d,%s,", $node, $phosts[$node];
    if ($suffix ne '') {
        printf "h%d-%s,%s-%s", $node, $suffix, $phosts[$node], $suffix;
    } else {
        printf "h%d,%s", $node, $phosts[$node];
    }
    print "\n";
}

exit(0);
